@use 'variables';
@use 'animations';

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

@for $i from 1 through 30 {
  .gridSize#{$i} {
    grid-template-columns: repeat($i, 32px);
    display: grid;
  }
}

.gameBox {
  .mapGrid {
    // our individual tiles
    .mapTile {
      //the cursor we see over tiles
      //TODO: Fix the tile cursor, currently it looks centered but it really isn't centered
      .tileCursor {
        display: none;
        position: absolute;
        bottom: -8px;
        left: -10px;

        text-align: center;
        width: 50px;
        height: 50px;
        background: url('/img/mapTiles/tileCursor.png') no-repeat;
        background-size: contain;
        z-index: 10;
        image-rendering: pixelated;
      }

      .tileMove {
        background: rgba(67, 217, 228, 0.5);
        border: 2px solid rgb(22, 98, 184);
        z-index: 5;
        position: absolute;
        top: 0;
        height: 31px;
        width: 31px;
      }
      .tilePath {
        background: rgba(0, 62, 133, 0.65);
        border: 2px solid rgb(0, 55, 117);
        z-index: 6;
        position: absolute;
        top: 0;
        height: 31px;
        width: 31px;
      }
      //the red square on enemy units
      .tileEnemy {
        background: rgba(228, 67, 67, 0.25);
        border: 2px solid rgb(184, 22, 22);
        z-index: 20;
        position: absolute;
        top: 0;
        margin: 0 auto;
        height: 31px;
        width: 31px;
        &:hover {
          cursor: pointer;
          animation: selectTarget 3s linear infinite;
        } //the red square on enemy units
      }
      .tileAttack {
        animation: selectTarget 4s linear infinite;
        background: rgba(228, 67, 67, 0.25);
        border: 2px solid rgb(184, 22, 22);
        z-index: 20;
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        margin: auto;
        height: 31px;
        width: 31px;
        @keyframes selectTarget {
          from {
            transform: rotate(0);
            background: rgba(228, 67, 67, 0.25);
          }

          50% {
            transform: rotate(270deg);
            background: rgba(228, 67, 67, 0.85);
          }
          to {
            transform: rotate(540deg);
            background: rgba(228, 67, 67, 0.25);
          }
        }
      } //The battle forecast we see when two units are about to fight
    }
  }
}
.forecast {
  position: absolute;
  z-index: 101;
  display: grid;
  left: -300%;
  right: -300%;
  top: 150%;
  grid-template-columns: auto auto auto;
  background: rgba(255, 255, 255, 0.9);
  border: 0.1em solid black;
  color: black;
  width: 800%;
  padding: 0.1em;
  margin: 0 auto;
  align-items: center;
  justify-items: center;
  h1 {
    font-size: 1rem;
    padding: 0;
    font-weight: 700;
    letter-spacing: 0.2em;
  }
  .forecastUnit,
  .forecastValues {
    width: 100%;
    height: 100%;
  }
  .forecastRelative {
    position: relative;
  }
  .forecastValues {
    display: grid;
    grid-template-columns: auto;
    justify-items: center;
    align-items: center;
  }

  h2 {
    font-size: 16px;
    //font-weight: 500
    width: 100%;
  }
  .orangeStarBackgroundUnit {
    background: rgba(232, 44, 22, 0.5);
    background-size: cover;
    width: 100%;
  }
  .blueMoonBackgroundUnit {
    background: rgba(17, 69, 225, 0.5);
    background-size: cover;
    width: 100%;
  }
  .orangeStarBackground {
    background: rgba(255, 50, 26, 0.25);
    background-size: cover;
    width: 100%;
  }
  .blueMoonBackground {
    background: rgba(21, 80, 255, 0.25);
    background-size: cover;
    width: 100%;
  }
  .hpBar {
    margin: 2px 0;
    text-align: center;
    justify-self: center;
    background: rgba(255, 255, 255, 0.75);
    border: 2px solid black;
    height: 8px;
    width: 100%;

    .orangeStarBar {
      background: rgb(253, 48, 0);
      background-size: cover;
      height: 4px;
    }
    .blueMoonBar {
      background: rgb(0, 127, 253);
      background-size: cover;
      height: 4px;
    }
  }
}
@for $i from 0 through 10 {
  .hpBarWidth#{$i} {
    width: #{$i} + 0%;
    height: 4px;
    z-index: 999;
  }

  //TODO: Cities, airport, base, comtower and mountains all need to have the same z index

  //This might be a bit complicated at first bu we are basically giving sass instructions to do specific instructions with all of these arrays in order for it to create alot of css background-image classes.
  //Here we have our array of maptiles
}
$mapTiles: fo0, mo0, pl0, oc0, re0;
$roadTiles: ro1, ro2, ro3, ro4, ro6, ro8, br1, br3;
$seaTiles: se0;
$pipeTiles: pi1, pi3, pi4;
$riverTiles: ri1, ri2, ri3, ri4, ri6, ri8;
$shoalTiles: sh1, sh3, sh5, sh7;
$siloTiles: si0, si1;

$mapArrays: $mapTiles, $roadTiles, $seaTiles, $riverTiles, $shoalTiles,
  $pipeTiles, $siloTiles;

@each $array in $mapArrays {
  @each $variable in $array {
    .#{$variable} {
      image-rendering: pixelated;
      height: 32px;
      width: 32px;
      @if $array == $mapTiles {
        background: url('/img/mapTiles/#{$variable}.webp') no-repeat;
      } @else if $array == $roadTiles {
        background: url('/img/mapTiles/roads/#{$variable}.webp') no-repeat;
      } @else if $array == $seaTiles {
        background: url('/img/mapTiles/sea/#{$variable}.webp') no-repeat;
      } @else if $array == $riverTiles {
        background: url('/img/mapTiles/river/#{$variable}.webp') no-repeat;
      } @else if $array == $shoalTiles {
        background: url('/img/mapTiles/shoal/#{$variable}.webp') no-repeat;
      } @else if $array == $pipeTiles {
        background: url('/img/mapTiles/pipes/#{$variable}.webp') no-repeat;
      } @else if $array == $siloTiles {
        background: url('/img/mapTiles/silo/#{$variable}.webp') no-repeat;
        height: 48px;
        width: 32px;
        bottom: 0;
        position: absolute;
      }
      background-size: contain;
    }
  }
}
// here we have our array of map tiles that are not 16x16
$bases: ne2, os2, bm2;
$cities: ne1, os1, bm1;
$hq: os0, bm0;
$comtower: os5, bm5, ne5;

$countryArrays: $hq, $cities, $bases, $comtower;
@each $array in $countryArrays {
  @each $variable in $array {
    .#{$variable} {
      image-rendering: pixelated;
      @if $array == $bases {
        background: url('/img/mapTiles/countries/base/#{$variable}.webp')
          no-repeat;
        //check if its a neutral base or not
        @if $variable == ne2 {
          height: 32px;
          width: 32px;
        } @else {
          height: 50px;
          width: 32px;
        }
      } @else if $array == $cities {
        background: url('/img/mapTiles/countries/city/#{$variable}.webp')
          no-repeat;
        height: 42px;
        width: 32px;
      } @else if $array == $hq {
        background: url('/img/mapTiles/countries/hq/#{$variable}.webp')
          no-repeat;
        height: 62px;
        width: 32px;
      } @else if $array == $comtower {
        background: url('/img/mapTiles/countries/comtower/#{$variable}.webp')
          no-repeat;
        height: 50px;
        width: 32px;
      }
      bottom: 0;
      z-index: 2;
      position: absolute;
      background-size: contain;
    }
  }
} // mountain and city overlap on top of the other tiles so they need to be absolute so they can go over other elements correctly.
.mo0 {
  background: url('/img/mapTiles/mo0.webp') no-repeat;
  background-size: contain;
  position: absolute;
  z-index: 2;
  bottom: 0;
  height: 42px;
  width: 32px;
}

$imageName: Infantry, Mech, Recon, APC, Artillery, Tank, Anti-Air, Missile,
  Rocket, MdTank, PipeRunner, NeoTank, MegaTank;

$countryName: orangeStar, blueMoon;

.gameBox {
  display: grid;
  position: relative;
  padding: 0;
  margin: 0;
  grid-template-columns: auto max-content auto;
  text-align: center;
  align-items: start;
  align-content: center;
  justify-items: center;
  justify-content: center;
  image-rendering: pixelated;
  color: black;
  button {
    cursor: pointer;
    // background-color: variables.$color-primary
    color: black;
    padding: 0.5em;
    font-size: 24px;
    font-weight: 500;
    transition: 0.4s;
    &:hover {
      // background-color: variables.$color-primary-variant
      color: black;
    }

    // our main grid where we have our map tiles
  }
  .mapGrid {
    margin: 0;
    border: 1em solid #091a4f;
    // our individual tiles

    .mapTile {
      width: 100%;
      background-color: #bfdd33;
      aspect-ratio: 1;
      position: relative;
      &:hover {
        .tileCursor {
          display: block;
        }
      }
      .tileMenu {
        display: grid;
        grid-template-columns: 1fr;
        gap: 4px;
        text-align: left;
        background: rgba(155, 155, 155, 0.8);
        border: 2px solid rgba(91, 91, 91, 0.8);
        z-index: 100;
        position: absolute;
        top: 0;
        left: 100%;
        .menuName {
          background-color: #d3d3d3;
          cursor: pointer;
          font-size: 14px;
          padding: 0 6px;
          display: inline-block;
          &:hover {
            filter: contrast(1.5);
          }
        }
        .menuOptions {
          padding: 0 6px;
          background-color: #d3d3d3;
          display: grid;
          grid-template-columns: auto auto auto;
          justify-items: left;
          align-items: center;
          cursor: pointer;
          &:hover {
            filter: contrast(1.5);
          }
          .menuCost {
            justify-self: right;
            display: inline-block;

            font-size: 14px;
          } //let our units be displayed correctly in the menu
          @each $country in $countryName {
            @each $unit in $imageName {
              .menu#{$country}#{$unit} {
                background: url('/img/units/#{$country}/#{$unit}-0.png')
                  no-repeat;
                display: inline-block;
                width: 16px;
                height: 16px;
              }
            }
          }
        }
        .menuNoBuy {
          filter: brightness(0.5);
          cursor: not-allowed;
          pointer-events: none;
        }

        //unit HP icons
        //
      }
    }
  }
}
@for $i from 1 through 9 {
  .HP#{$i}Icon {
    position: absolute;
    right: 0px;
    bottom: 0px;
    width: 16px;
    height: 14px;
    background: url('/images/UI/hp/#{$i}.png') no-repeat;
    z-index: 9;
    image-rendering: pixelated;
    background-size: contain;
  }
}
.captureIcon {
  position: absolute;
  left: 0px;
  bottom: 0px;
  width: 16px;
  height: 14px;
  background: url('/images/UI/capture.png') no-repeat;
  z-index: 9;
  image-rendering: pixelated;
  background-size: contain;
}

//this allows us to make units wait
.tileUnit {
  position: absolute;
  bottom: 0;
}
.stateUsed {
  .tileUnit {
    filter: brightness(0.65);
  }
}
h1 {
  padding: 0.5em;
}
.playerBox {
  width: 100%;
  z-index: 25;
}
.activePlayer {
  filter: brightness(1.1) contrast(1.05);
}
.inactivePlayer {
  filter: brightness(0.8) contrast(0.8);
}
.gameTitle {
  // color: variables.$text-main
  padding: 0.25em 0;
}
.column2 {
  grid-column: span 2;
}

.column3 {
  grid-column: span 3;
}
